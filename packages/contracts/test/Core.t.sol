// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "forge-std/Test.sol";
import "../src/Core.sol";
import "../src/Groth16Verifier.sol";

contract OpactTest is Test {
    Core core;
    Groth16Verifier verifier;
    IERC20 token;

    address admin;
    address tokenInstance;
    address recipient;

    function setUp() public {
        verifier = new Groth16Verifier();
        core = new Core(address(verifier));
        admin = address(this);
        recipient = address(this);
        tokenInstance = 0xcf185f2F3Fe19D82bFdcee59E3330FD7ba5f27ce; // KTK on Sepolia, faucet: https://www.erc20tokenfaucet.com/
    }

    function testTransact() public {
        vm.startPrank(0x0BA0076b4015Bf9328212e738aDf78F64CA3D799);

        token = IERC20(tokenInstance);
        token.approve(address(core), 15);

        Core.CoreProof memory proof;
        Core.ExtData memory extData;

        // Proof generated by snarkjs

        proof.publicValues = new uint[](10);
        proof.publicValues[0] = 0x0e6e420fa6186494a9de1a4e1ff02dd48801da276263d19328f3260d8895d698;
        proof.publicValues[1] = 0x2f68a1c58e257e42a17a6c61dff5551ed560b9922ab119d5ac8e184c9734ead9;
        proof.publicValues[2] = 0x1e3a47083bc5cfe27915fa99e5a6bb76c4ddb5dfcd39ab90239d7ee17decb04d;
        proof.publicValues[3] = 0x1eb0e0d0cc70dad785833204a874f15cf36e295542ff8c870da64d159290f03e;
        proof.publicValues[4] = 0x1c3685a606efc7f559cc97dc0e74ae1b508c9cf54f4e82451a53f8fce103789d;
        proof.publicValues[5] = 0x2346880fa2f4860a4a3d70636b393201119227b3f6f631ebf9d222c99ecdf7fd;
        proof.publicValues[6] = 0x00f84fc142b6c5d8574f9d58b48b89f4bd608c08631eeedc900d36146f1db3a3;
        proof.publicValues[7] = 0x2f5857c42523fce0afac25e242a334fae882f92e6c29561431102288c23202c3;
        proof.publicValues[8] = 0x000000000000000000000000000000000000000000000000000000000000000f;
        proof.publicValues[9] = 0x29176100eaa962bdc1fe6c654d6a3c130e96a4d1168b33848b897dc502820133;

        proof.a.x = 0x0e256dfe96a7032cf2aff635979134a52effeeb9164e7a6c746280e17bc9f3f3;
        proof.a.y = 0x27f41feb73125f6e679be5ea3810bfcd88be539fa0105b3fab07a79bd11b308b;

        proof.b.x[0] = 0x24153532f4873e5dd5201a2b5f196e7cd4d16236d76e92eaded8d267bfabca2a;
        proof.b.x[1] = 0x0d3dde0985def5b5249ce045bc8c362ab1a60aa1748c12acdb27f36dceaee099;

        proof.b.y[0] = 0x2f75eee66cf90efd4b04a3737ac1833bc97c298fac0d16a2a21692cbf0ff0fb6;
        proof.b.y[1] = 0x2450be8da2a80e6290aa417d11e11d99fb9020678c1d59ddf16ec34ea0c0798d;

        proof.c.x = 0x246443d2e9ece8020835386888b4782382d59efadceda9e53cadf6a103b8fa85;
        proof.c.y = 0x2737639aaf1906c803187635c8aba465b1885b650ea754b5e19d5f08bdba3e9d;

        // proof.publicValues = new uint[](10);
        // proof.publicValues[0] = 6527188994441314969255312706065345593259395337463538770811940190994623223448;
        // proof.publicValues[1] = 21443572485391568159800782191812935835534334817699172242223315142338162256601;
        // proof.publicValues[2] = 13672352833220133775211696035420595658013619536618326929069231657553993969741;
        // proof.publicValues[3] = 13881902161279708440162745797692838873263705446387125848429397484331670237246;
        // proof.publicValues[4] = 12761091910175275488314396963386678993429776249513286762538007684999656208541;
        // proof.publicValues[5] = 15955568054012356442664029759819462812756084910985094845363898972913835833341;
        // proof.publicValues[6] = 438728520321942160621787918154267617553185346325138591874151022999503745955;
        // proof.publicValues[7] = 21414792165107094930503066755869007218485843369153027361954450892852833682115;
        // proof.publicValues[8] = 15;
        // proof.publicValues[9] = 18586133768512220936620570745912940619677854269274689475585506675881198879027;

        // proof.a.x = 6398512375606331953645482496996320044083137978513495783244754654720476967923;
        // proof.a.y = 18071532080396003875383631179122747833214391291881420753414508079014561394827;

        // proof.b.x[0] = 5989377146960707134197797394923852205263828707289744528977034357660678283417;
        // proof.b.x[1] = 16320733503663484474866212081841987720542209860263149333357776502198519974442;

        // proof.b.y[0] = 16425925464467956560715678804614663002327522075890020103333171398733434222989;
        // proof.b.y[1] = 21467073817887045064912262427265899943868632243009321240995654217260471357366;

        // proof.c.x = 16460415358704685033843618664830343056696892546944713208717226356797670488709;
        // proof.c.y = 17738065126470265634305488627605311899453830835596780452666879547921854512797;

        // Proof used in Kadena Opact

        // proof.publicValues = new uint[](10);
        // proof.publicValues[0] = 10759049583019014634807490851987652298928968305262173082697912975348336513965;
        // proof.publicValues[1] = 21443572485391568159800782191812935835534334817699172242223315142338162256601;
        // proof.publicValues[2] = 19152182544368176723371490990816452837749714285437722835448230678264204178283;
        // proof.publicValues[3] = 13737588053631738437057366780848986597389025449666869349833785199359918655337;
        // proof.publicValues[4] = 52940479234804508742730244213172970921967957932565252082978724062944817771;
        // proof.publicValues[5] = 9003959818442682895415143808060678249563203430700762282054301409081988468357;
        // proof.publicValues[6] = 7306869390658200281444562324824494781530617532891008632247924409647520329450;
        // proof.publicValues[7] = 21414792165107094930503066755869007218485843369153027361954450892852833682115;
        // proof.publicValues[8] = 10000000000000;
        // proof.publicValues[9] = 9849297909093445175737834964364466008387926090189409756600309129625782801789;

        // proof.a.x = 12311659346703813126739873732354939799365214203583584116058711079508732393077;
        // proof.a.y = 8573635077513588227862703632120265693326522820984885483538414094030329617223;

        // proof.b.x[0] = 8077562496070794281370607878392998871128864847267852844962222020255803379441;
        // proof.b.x[1] = 17406756504756732292551453271488004562700057730053113778379911161010596100838;

        // proof.b.y[0] = 1448452413711167512209364788462286541170088323173923335755389570023213022382;
        // proof.b.y[1] = 15320558922757068282920394108966146661263143484432755128102278819682384053064;

        // proof.c.x = 12400425210567679561202404612691818200498462374436232201676019477641445459514;
        // proof.c.y = 18429870683551333224699691669350107463333195872463753463469300685875090496647;

        // Proof generated by Matt

        // proof.publicValues = new uint256[](10);
        // proof.publicValues[0] = 0xE6E420FA6186494A9DE1A4E1FF02DD48801DA276263D19328F3260D8895D698;
        // proof.publicValues[1] = 0x2F68A1C58E257E42A17A6C61DFF5551ED560B9922AB119D5AC8E184C9734EAD9;
        // proof.publicValues[2] = 0x1E3A47083BC5CFE27915FA99E5A6BB76C4DDB5DFCD39AB90239D7EE17DECB04D;
        // proof.publicValues[3] = 0x1EB0E0D0CC70DAD785833204A874F15CF36E295542FF8C870DA64D159290F03E;
        // proof.publicValues[4] = 0x1C3685A606EFC7F559CC97DC0E74AE1B508C9CF54F4E82451A53F8FCE103789D;
        // proof.publicValues[5] = 0x2346880FA2F4860A4A3D70636B393201119227B3F6F631EBF9D222C99ECDF7FD;
        // proof.publicValues[6] = 0xF84FC142B6C5D8574F9D58B48B89F4BD608C08631EEEDC900D36146F1DB3A3;
        // proof.publicValues[7] = 0x2F5857C42523FCE0AFAC25E242A334FAE882F92E6C29561431102288C23202C3;
        // proof.publicValues[8] = 0x000000000000000000000000000000000000000000000000000000000000000F;
        // proof.publicValues[9] = 0x29176100EAA962BDC1FE6C654D6A3C130E96A4D1168B33848B897DC502820133;

        // proof.a.x = 0xF3ADBAC5B8BD3717E2C7992369B1FE63E977D1B0578552E9E57CD228FBD6A27;
        // proof.a.y = 0x9AF8C405A92185E1DDB041D381E14A3150F2C1A4A8A5D7B4903F4591F97971A;

        // proof.b.x[0] = 0x1CABD21B6D3EE710C2BA1FDE3FFA33028FF083A112C314CCD42E3C0D4079E598;
        // proof.b.x[1] = 0xFC0ADCA49D97FCB14254ABDF8F91CA0232065E7D43D7BFF691B83C9CB0769EB;

        // proof.b.y[0] = 0x23E921FEB9758109FCBA5F0B673C97FDAD62F549C6A7A2A33637F75BA3352543;
        // proof.b.y[1] = 0xE2D5D74BC8F39D4F0117AAFDAB4CF5F918A4A170BD2B7E0019300AEB5EAC3AD;

        // proof.c.x = 0x1221FE5B2848C3899C9FF6DDF87C22D674785B323F35FC9EB00807CEBD7FFFF2;
        // proof.c.y = 0x241B4E97FA1A9D03B125E0959BB101525B787B0C9443E3D42C6D148EF45118B9;

        extData.recipient = recipient;
        extData.tokenAddress = tokenInstance;
        extData.tokenAmount = 15;
        extData.encryptedReceipts = new string[](2);
        extData.encryptedReceipts[0] = "encryptedReceipt";
        extData.encryptedReceipts[1] = "encryptedReceipt";
        extData.encryptedCommitments = new string[](2);
        extData.encryptedCommitments[0] = "encryptedCommitment";
        extData.encryptedCommitments[1] = "encryptedCommitment";
        extData.outputCommitments = new uint256[](2);
        extData.outputCommitments[0] = 1;
        extData.outputCommitments[1] = 2;

        bool result = core.transact(proof, extData);

        vm.stopPrank();

        assertTrue(result);
    }
}
